#############################
# Data Source
##############################

data "aws_ami" "ubuntu-2204-LTS" {
  most_recent = true
  owners      = ["099720109477"] # Canonical's AWS account ID for Ubuntu images

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"]
  }

  filter {
    name   = "state"
    values = ["available"]
  }
}

#############################
### EC2 Instance 
#############################

# Key pair to access EC2 instance
resource "aws_key_pair" "container-key" {
  key_name   = "sonar-key"
  public_key = file("sonar-key.pem.pub")
}

# Create EC2 instance
resource "aws_instance" "container-ec2" {
  ami                    = data.aws_ami.ubuntu-2204-LTS.id
  instance_type          = "t2.medium"
  subnet_id              = aws_subnet.container.id
  vpc_security_group_ids = [aws_security_group.webserver-security-group.id]
  key_name               = aws_key_pair.container-key.key_name
  tags = {
    Name = "sonar-server"
  }

  user_data = <<-EOF
    #!/bin/bash
    cp /etc/sysctl.conf /root/sysctl.conf_backup
    cat <<EOT > /etc/sysctl.conf
    vm.max_map_count=262144
    fs.file-max=65536
    ulimit -n 65536
    ulimit -u 4096
    EOT

    cp /etc/security/limits.conf /root/sec_limit.conf_backup
    cat <<EOT > /etc/security/limits.conf
    sonarqube   -   nofile   65536
    sonarqube   -   nproc    4096
    EOT

    sudo apt-get update -y
    sudo apt-get install openjdk-17-jdk -y
    sudo update-alternatives --config java
    java -version

    wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -
    sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
    sudo apt install postgresql postgresql-contrib -y
    sudo systemctl enable postgresql.service
    sudo systemctl start postgresql.service
    sudo echo "postgres:admin123" | chpasswd
    runuser -l postgres -c "createuser sonar"
    sudo -i -u postgres psql -c "ALTER USER sonar WITH ENCRYPTED PASSWORD 'admin123';"
    sudo -i -u postgres psql -c "CREATE DATABASE sonarqube OWNER sonar;"
    sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonar;"
    systemctl restart postgresql
    netstat -tulpena | grep postgres

    sudo mkdir -p /sonarqube/
    cd /sonarqube/
    sudo curl -O https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.5.1.90531.zip
    sudo apt-get install zip -y
    sudo unzip -o sonarqube-10.5.1.90531.zip -d /opt/
    sudo mv /opt/sonarqube-10.5.1.90531/ /opt/sonarqube
    sudo groupadd sonar
    sudo useradd -c "SonarQube - User" -d /opt/sonarqube/ -g sonar sonar
    sudo chown sonar:sonar /opt/sonarqube/ -R

    cp /opt/sonarqube/conf/sonar.properties /root/sonar.properties_backup
    cat <<EOT > /opt/sonarqube/conf/sonar.properties
    sonar.jdbc.username=sonar
    sonar.jdbc.password=admin123
    sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube
    sonar.web.host=0.0.0.0
    sonar.web.port=9000
    sonar.web.javaAdditionalOpts=-server
    sonar.search.javaOpts=-Xmx512m -Xms512m -XX:+HeapDumpOnOutOfMemoryError
    sonar.log.level=INFO
    sonar.path.logs=logs
    EOT

    cat <<EOT > /etc/systemd/system/sonarqube.service
    [Unit]
    Description=SonarQube service
    After=syslog.target network.target

    [Service]
    Type=forking
    ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
    ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
    User=sonar
    Group=sonar
    Restart=always
    LimitNOFILE=65536
    LimitNPROC=4096

    [Install]
    WantedBy=multi-user.target
    EOT

    systemctl daemon-reload
    systemctl enable sonarqube.service
    sudo apt-get install nginx -y
    rm -rf /etc/nginx/sites-enabled/default
    rm -rf /etc/nginx/sites-available/default

    cat <<EOT > /etc/nginx/sites-available/sonarqube
    server{
      listen      80;
      server_name sonarqube.groophy.in;

      access_log  /var/log/nginx/sonar.access.log;
      error_log   /var/log/nginx/sonar.error.log;

      proxy_buffers 16 64k;
      proxy_buffer_size 128k;

      location / {
          proxy_pass  http://127.0.0.1:9000;
          proxy_set_header    Host            \$host;
          proxy_set_header    X-Real-IP       \$remote_addr;
          proxy_set_header    X-Forwarded-For \$proxy_add_x_forwarded_for;
          proxy_set_header    X-Forwarded-Proto http;
      }
    }
    EOT

    ln -s /etc/nginx/sites-available/sonarqube /etc/nginx/sites-enabled/sonarqube
    systemctl enable nginx.service
    sudo ufw allow 80,9000,9001/tcp

    echo "System reboot in 30 sec"
    sleep 30
    reboot
  EOF
}

output "publicIP" {
  value = aws_instance.container-ec2.public_ip
}
output "privateIP" {
  value = aws_instance.container-ec2.private_ip
}
